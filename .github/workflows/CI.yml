name: ftlog

on: [push, pull_request]

jobs:
  build_and_test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: rustfmt
        run: cargo fmt --all -- --check

      - name: check build
        run: cargo check --all --bins --examples --tests --no-default-features

      - name: check build (random_drop)
        run: cargo check --all --bins --examples --tests --no-default-features --features=random_drop

      - name: tests
        timeout-minutes: 40
        run: cargo test --all --no-fail-fast --no-default-features --release -- --nocapture 

  test_tsc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: check build (feature:tsc)
        run: cargo check --all --bins --examples --tests --features=tsc

      - name: tests (feature:tsc)
        timeout-minutes: 40
        run: cargo test --all --no-fail-fast --features=tsc --release -- --nocapture

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: doc
        env:
          RUSTDOCFLAGS: -Dwarnings
        run: cargo doc --all --no-deps

  publish:
    name: Publish Package
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v1

      - name: login
        env:
          SUPER_SECRET: ${{ secrets.CARGO_TOKEN }}
        run: cargo login "$SUPER_SECRET"
        shell: bash

      - name: publish
        run: cargo publish
